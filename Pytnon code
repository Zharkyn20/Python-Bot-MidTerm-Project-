import telebot
import config

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

# Menu
markup = types.InlineKeyboardMarkup(row_width=2)
item1 = types.InlineKeyboardButton("Brief Information", callback_data='Brief Information')
item2 = types.InlineKeyboardButton("Man/Female Compatibility", callback_data='Man/Female Compatibility')
item3 = types.InlineKeyboardButton("Possible children Blood Types", callback_data='Possible children Blood Types')
item4 = types.InlineKeyboardButton("Donor Compatibility", callback_data='Donor Compatibility')

markup.add(item1, item2, item3, item4)

# Buttons for compatibility
markup_comp = types.InlineKeyboardMarkup(row_width=4)
item1 = types.InlineKeyboardButton("O+", callback_data='First Positive')
item2 = types.InlineKeyboardButton("O-", callback_data='First Negative')
item3 = types.InlineKeyboardButton("A+", callback_data='Second Positive')
item4 = types.InlineKeyboardButton("A-", callback_data='Second Negative') 
item5 = types.InlineKeyboardButton("B+", callback_data='Third Positive')
item6 = types.InlineKeyboardButton("B-", callback_data='Third Negative')
item7 = types.InlineKeyboardButton("AB+", callback_data='Fourth Positive')
item8 = types.InlineKeyboardButton("AB-", callback_data='Fourth Negative')

markup_comp.add(item1, item2, item3, item4, item5, item6, item7, item8)

# Buttons for gender
markup_gender = types.InlineKeyboardMarkup(row_width=2)
item1 = types.InlineKeyboardButton("Man", callback_data='man')
item2 = types.InlineKeyboardButton("Woman", callback_data='woman')

markup_gender.add(item1, item2)

#Welcome
@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    bot.send_message(message.chat.id, "Welcome, {0.first_name}!\nI am - <b>{1.first_name}</b>, a bot created in order to inform people about the importance of knowledge some things about <b>Blood Types</b>.".format(message.from_user, bot.get_me()), 
    	parse_mode="html", reply_markup=markup)

#Call menu
@bot.message_handler(commands=['menu'])
def menu(message):
	bot.send_message(message.chat.id, "Main menu: ", parse_mode='html', reply_markup=markup)  

#Functions texts
info_text = 'Blood groups \nThere are 4 main blood groups (types of blood) – A, B, AB and O. Your blood group is determined by the genes you inherit from your parents.\nEach group can be either RhD positive or RhD negative, which means in total there are 8 blood groups.\n\nAntibodies and antigens \nBlood is made up of red blood cells, white blood cells and platelets in a liquid called plasma. Your blood group is identified by antibodies and antigens in the blood.\nAntibodies are proteins found in plasma. They\'re part of your body\'s natural defences. They recognise foreign substances, such as germs, and alert your immune system, which destroys them.\nAntigens are protein molecules found on the surface of red blood cells.'
info_text0 = 'The ABO system\nThere are 4 main blood groups defined by the ABO system:\n -blood group A – has A antigens on the red blood cells with anti-B antibodies in the plasma\n -blood group B – has B antigens with anti-A antibodies in the plasma\n -blood group O – has no antigens, but both anti-A and anti-B antibodies in the plasma\n -blood group AB – has both A and B antigens, but no antibodies'
info_text1 = 'The Rh system\nRed blood cells sometimes have another antigen, a protein known as the RhD antigen. If this is present, your blood group is RhD positive. If it\'s absent, your blood group is RhD negative.\n\nThis means you can be 1 of 8 blood groups:\n\n -A RhD positive (A+)\n\n -A RhD negative (A-)\n\n -B RhD positive (B+)\n\n -B RhD negative (B-)\n\n -O RhD positive (O+)\n\n -O RhD negative (O-)\n\n -AB RhD positive (AB+)\n\n -AB RhD negative (AB-)'
m_f_comp_text0 = 'Choose the blood type for male: '
m_f_comp_text1 = 'Choose the blood type for female: '



#Functions
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'Brief Information':
                bot.send_message(call.message.chat.id, info_text)
            elif call.data == 'Man/Female Compatibility':
                bot.send_message(call.message.chat.id, m_f_comp_text0, reply_markup=markup_comp)
                bot.send_message(call.message.chat.id, m_f_comp_text1, reply_markup=markup_comp)
            elif call.data == 'First Positive' and 'Second Positive':
            	bot.send_message(call.message.chat.id, "uraa")
            elif call.data == 'Possible children Blood Types':
            	bot.send_message(call.message.chat.id, '')
            elif call.data == 'Donor Compatibility':
            	bot.send_message(call.message.chat.id, '')

 
            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=call.data,
                reply_markup=None)
 
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="To enter the main menu type '/menu'")

    except Exception as e:
        print(repr(e))
#Run
bot.polling(none_stop=True)
